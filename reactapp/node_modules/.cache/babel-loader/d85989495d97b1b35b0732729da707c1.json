{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xida\\\\Desktop\\\\webAppOberon\\\\reactapp\\\\src\\\\components\\\\DApp.js\";\nimport '../App.css';\nimport React from \"react\";\nimport { ethers } from \"ethers\";\nimport { NoWalletDetected } from \"./NoWalletDetected\";\nimport { ConnectWallet } from \"./ConnectWallet\";\nimport { Buyer } from './Buyer';\nimport { Seller } from './Seller';\nimport Escrow from \"../contracts/escrow.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      currentAddress: undefined,\n      sellerAddress: undefined,\n      balance: undefined,\n      contractAddress: \"0xe73d709355212E7CEe78eD141E9db96f8324a248\",\n      tokenData: undefined,\n      oreders: undefined\n    };\n    this.state = this.initialState;\n  }\n\n  render() {\n    if (window.ethereum === undefined) {\n      return /*#__PURE__*/_jsxDEV(NoWalletDetected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!this.state.currentAddress) {\n      return /*#__PURE__*/_jsxDEV(ConnectWallet, {\n        connectWallet: () => this._connectWallet()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this);\n    }\n\n    if (this.state.currentAddress === this.state.sellerAddress) {\n      return /*#__PURE__*/_jsxDEV(Buyer, {\n        currentAddress: this.state.currentAddress,\n        balance: this.state.balance,\n        seller: this.state.sellerAddress,\n        orders: this.state.oreders,\n        askRefund: id => this._askRefund(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Seller, {\n        currentAddress: this.state.currentAddress,\n        balance: this.state.balance,\n        seller: this.state.sellerAddress,\n        orders: this.state.oreders,\n        deleteOrder: id => this._deleteOrder(id),\n        confirmRefund: id => this._confirmRefund(id),\n        createOrder: () => this._createOrder()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  async _connectWallet() {\n    const [currentAddress] = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n\n    this._initialize(currentAddress);\n\n    window.ethereum.on(\"accountsChanged\", _ref => {\n      let [newAddress] = _ref;\n\n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n\n      this._initialize(newAddress);\n    });\n    window.ethereum.on(\"chainChanged\", _ref2 => {\n      let [chainId] = _ref2;\n\n      this._resetState();\n    });\n  }\n\n  _initialize(userAddress) {\n    this.setState({\n      currentAddress: userAddress\n    });\n\n    this._intializeEthers();\n\n    this._initializeSeller();\n\n    this._updateBalance();\n  }\n\n  async _intializeEthers() {\n    this._provider = new ethers.providers.Web3Provider(window.ethereum);\n    this._contract = new ethers.Contract(this.state.contractAddress, Escrow.abi, this._provider.getSigner(0));\n  }\n\n  async _initializeSeller() {\n    const sellerAddress = await this._contract.getSeller();\n    this.setState({\n      sellerAddress\n    });\n  }\n\n  async _updateBalance() {\n    const balance = (await this._provider.getBalance(this.state.currentAddress, \"latest\")).toString();\n    this.setState({\n      balance\n    });\n  }\n\n  async _initializeOrders() {\n    const orders = await this._contract.getOreders();\n    this.setState({\n      orders\n    });\n  }\n\n  async _deleteOrder(id) {\n    try {\n      await this._contract.deleteOrder(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async _askRefund(id) {\n    try {\n      await this._contract.askRefund(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async _confirmRefund(id) {\n    try {\n      await this._contract.refundBuyer(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async _createOrder() {\n    try {\n      await this._contract.createOrder();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Xida/Desktop/webAppOberon/reactapp/src/components/DApp.js"],"names":["React","ethers","NoWalletDetected","ConnectWallet","Buyer","Seller","Escrow","DApp","Component","constructor","props","initialState","currentAddress","undefined","sellerAddress","balance","contractAddress","tokenData","oreders","state","render","window","ethereum","_connectWallet","id","_askRefund","_deleteOrder","_confirmRefund","_createOrder","request","method","_initialize","on","newAddress","_resetState","chainId","userAddress","setState","_intializeEthers","_initializeSeller","_updateBalance","_provider","providers","Web3Provider","_contract","Contract","abi","getSigner","getSeller","getBalance","toString","_initializeOrders","orders","getOreders","deleteOrder","err","console","log","askRefund","refundBuyer","createOrder"],"mappings":"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","sourcesContent":["import '../App.css';\r\nimport React from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { NoWalletDetected } from \"./NoWalletDetected\";\r\nimport { ConnectWallet } from \"./ConnectWallet\";\r\nimport { Buyer } from './Buyer';\r\nimport { Seller } from './Seller';\r\n\r\nimport Escrow from \"../contracts/escrow.json\";\r\n\r\nexport class DApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            currentAddress: undefined,\r\n            sellerAddress: undefined,\r\n            balance: undefined,\r\n            contractAddress: \"0xe73d709355212E7CEe78eD141E9db96f8324a248\",\r\n            tokenData: undefined,\r\n            oreders: undefined,\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    render() {\r\n        if(window.ethereum === undefined) {\r\n            return <NoWalletDetected/>;\r\n        }\r\n\r\n        if(!this.state.currentAddress) {\r\n            return (\r\n              <ConnectWallet connectWallet={() => this._connectWallet()}/>\r\n            );\r\n        }\r\n\r\n        if(this.state.currentAddress === this.state.sellerAddress) {\r\n            return (\r\n                <Buyer  currentAddress={this.state.currentAddress}\r\n                        balance={this.state.balance}\r\n                        seller={this.state.sellerAddress}\r\n                        orders={this.state.oreders}\r\n                        askRefund={(id) => this._askRefund(id)}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Seller currentAddress={this.state.currentAddress}\r\n                        balance={this.state.balance}\r\n                        seller={this.state.sellerAddress}\r\n                        orders={this.state.oreders}\r\n                        deleteOrder={(id) => this._deleteOrder(id)}\r\n                        confirmRefund={(id) => this._confirmRefund(id)}\r\n                        createOrder={() => this._createOrder()}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    async _connectWallet() {\r\n        const [currentAddress] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        this._initialize(currentAddress);\r\n        window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\r\n            if (newAddress === undefined) {\r\n                return this._resetState();\r\n            }\r\n            this._initialize(newAddress);\r\n        });\r\n        \r\n        window.ethereum.on(\"chainChanged\", ([chainId]) => {\r\n            this._resetState();\r\n        });\r\n    }\r\n\r\n    _initialize(userAddress) {\r\n        this.setState({\r\n          currentAddress: userAddress,\r\n        });\r\n\r\n        this._intializeEthers();\r\n        this._initializeSeller();\r\n        this._updateBalance();\r\n    }\r\n\r\n    async _intializeEthers() {\r\n        this._provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    \r\n        this._contract = new ethers.Contract(\r\n          this.state.contractAddress,\r\n          Escrow.abi,\r\n          this._provider.getSigner(0)\r\n        );\r\n    }\r\n\r\n    async _initializeSeller() {\r\n        const sellerAddress = await this._contract.getSeller();\r\n        this.setState({ sellerAddress});\r\n    }\r\n\r\n    async _updateBalance() {\r\n        const balance = (await this._provider.getBalance(this.state.currentAddress, \"latest\")).toString();\r\n        this.setState({ balance });\r\n    }\r\n\r\n    async _initializeOrders() {\r\n        const orders = await this._contract.getOreders();\r\n        this.setState({ orders });\r\n    }\r\n\r\n    async _deleteOrder(id) {\r\n        try {\r\n            await this._contract.deleteOrder(id);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async _askRefund(id) {\r\n        try {\r\n            await this._contract.askRefund(id);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async _confirmRefund(id) {\r\n        try {\r\n            await this._contract.refundBuyer(id);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async _createOrder() {\r\n        try {\r\n            await this._contract.createOrder();\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}